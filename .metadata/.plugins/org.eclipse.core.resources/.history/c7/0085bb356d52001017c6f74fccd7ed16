/*
 * dht11.c
 *
 *  Created on: Jun 25, 2025
 *      Author: Administrator
 */

#include "dht11.h"

GPIO_Handle_t DHT11_Pin;

static void IO_Write(uint8_t RoW);
static void IO_Write(uint8_t RoW){
	GPIOE_PCLK_EN;
	DHT11_Pin.pGPIOx = GPIOE;
	DHT11_Pin.GPIO_Pin_Config.GPIO_PinNumber = GPIO_PIN_NUM_9;
	DHT11_Pin.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_OSPEEDR_LOW;
	DHT11_Pin.GPIO_Pin_Config.GPIO_PinOPType = GPIO_OTYPER_PP;
	DHT11_Pin.GPIO_Pin_Config.GPIO_PinPuPdControl = GPIO_PUPDR_PU;

	if (RoW == Read){
		DHT11_Pin.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODER_INPUT;
	}else{
		DHT11_Pin.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODER_OUTPUT;
	}
	GPIO_Init(&DHT11_Pin);
}

uint8_t start_dht(void){
	uint8_t Timeout = 100;
	uint8_t Data[5];
	IO_Write(Write);
	uint8_t Response = 0;


	// MCU Sends out Start Signal to DHT
	GPIO_WriteToOutPutPin(DHT11_Pin.pGPIOx, 9, Low);
	delay_ms(20);
	GPIO_WriteToOutPutPin(DHT11_Pin.pGPIOx, 9, High);

	delay_us(40);
	//Check response

	IO_Write(Read);
	if (!(GPIO_ReadFromInputPin(DHT11_Pin.pGPIOx, 9))){	// Check DHT pin low
		delay_us(80);
		if (GPIO_ReadFromInputPin(DHT11_Pin.pGPIOx, 9)){	// Check DHT pin high
			Response = 1;
		}
		else{
			Response = -1;
			return Response;
		}
		while (GPIO_ReadFromInputPin(DHT11_Pin.pGPIOx, 9));	// Wait DHT pin low
	}
	else{
		Response = -1;
		return Response;
	}


	UART_SendString(USART2, "Check response success\r\n");

	uint64_t tmp = 0;
	// Read 40 bit
	for (int i = 0; i < 40; i++){
		while (!(GPIO_ReadFromInputPin(DHT11_Pin.pGPIOx, 9))){
		    if (--Timeout == 0) {
		        UART_SendString(USART2, "Timeout waiting HIGH\r\n");
		        return -1;
		    }
		    delay_us(1);
		}
//		delay_us(40);
		if ((DHT11_Pin.pGPIOx->IDR >> 9) & 0x00000001){	// data is 1
			tmp = (tmp << 1) | 0x1;
//			UART_SendString(USART2, "1\r\n");
//			UART_SendInt(USART2, tmp);
		}
		else{	// data is 0
			tmp = (tmp << 1) | 0x0;
//			UART_SendString(USART2, "0\r\n");
//			UART_SendInt(USART2, tmp);
		}
		Timeout = 100;
		while (GPIO_ReadFromInputPin(DHT11_Pin.pGPIOx, 9)){
		    if (--Timeout == 0) {
		        UART_SendString(USART2, "Timeout waiting LOW\r\n");
		        return -1;
		    }
		    delay_us(1);
		}
		UART_SendString(USART2, "Done\r\n");
	}

	Data[0] = (tmp >> 32)	& 0xFF;	// Int RH
	Data[1] = (tmp >> 24)	& 0xFF;	// Dec RH
	Data[2] = (tmp >> 16)	& 0xFF;	// Int T
	Data[3] = (tmp >> 8)	& 0xFF;	// Dec T
	Data[4] = tmp			& 0xFF;	// Checksum
	(void)tmp;

	UART_SendInt(USART2, Data[0]);
	UART_SendInt(USART2, Data[1]);
	UART_SendInt(USART2, Data[2]);
	UART_SendInt(USART2, Data[3]);
	UART_SendInt(USART2, Data[4]);

	//End
	while(!GPIO_ReadFromInputPin(DHT11_Pin.pGPIOx, 9));

	return 1;
}

